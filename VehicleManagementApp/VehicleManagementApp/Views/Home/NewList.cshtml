@using VehicleManagementApp.BLL
@using VehicleManagementApp.BLL.Contracts
@model VehicleManagementApp.ViewModels.MyRequsitionCreateViewModel

@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";


    var employees = ViewBag.Employees;
}

<h2 style="padding-bottom: 30px; text-align: center">New Requisitions</h2>

@using (Ajax.BeginForm("MyJsonCreate", "Home", null, new AjaxOptions
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "requisitionListDiv",
    OnComplete = "RequestSuccess"
}))


{
    @Html.AntiForgeryToken()

    <div class="container" style="margin-top: 3%">
        <a href="#" class="link" onclick="AddNewRequisition()">Add New Requisition</a> <br /><br />

        <div class="modal fade " id="MyModal">
            <div class="modal-dialog modal-lg" style="width:80%;">

                <div class="modal-content">
                    <div class="modal-header" style="text-align: center; color: #6a5acd; background-color: #b0e0e6; border-top-left-radius: 5px; border-top-right-radius: 5px;">
                        <h3 id="ModalTitle">Add New Requisition</h3>
                        <button href="#" class="close" data-dismiss="modal">&times;</button>

                    </div>
                    <div class="modal-body">
                        @*<form id="rquisitionForm">*@
                        <fieldset id="SubmitForm">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <div class="row col-md-12">
                                    @Html.LabelFor(model => model.RequestType, htmlAttributes: new { @class = "control-label col-md-4" })<span class="reqst">*</span>
                                    <div class="col-md-7">
                                        @Html.DropDownListFor(model => model.RequestType, new SelectList(Model.RequestTypes, "Text", "Text"), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.RequestType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row col-md-12">
                                    @Html.LabelFor(model => model.Form, htmlAttributes: new { @class = "control-label col-md-4" })<span class="reqst">*</span>
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.Form, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Form, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="form-group">
                                <div class="row col-md-12">
                                    @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-4" })<span class="reqst">*</span>
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row col-md-12">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })<span class="reqst">*</span>
                                    <div class="col-md-7">
                                        @Html.TextAreaFor(model => model.Description, 3, 25, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row col-md-12">
                                    @Html.LabelFor(model => model.JourneyStartDate, htmlAttributes: new { @class = "control-label col-md-4" })<span class="reqst">*</span>
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.JourneyStartDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Journey Start Date", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.JourneyStartDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row col-md-12">
                                    @Html.LabelFor(model => model.JourneyStartTime, htmlAttributes: new { @class = "control-label col-md-4" })<span class="reqst">*</span>
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.JourneyStartTime, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.JourneyStartTime, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row col-md-12">
                                    @Html.LabelFor(model => model.JouneyEndDate, htmlAttributes: new { @class = "control-label col-md-4" })<span class="reqst">*</span>
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.JouneyEndDate, new { htmlAttributes = new { @class = "form-control", placeholder = "Journey End Date", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.JouneyEndDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="row col-md-12">
                                    @Html.LabelFor(model => model.JouneyEndTime, htmlAttributes: new { @class = "control-label col-md-4" })<span class="reqst">*</span>
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.JouneyEndTime, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.JouneyEndTime, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="row col-md-12">
                                    @Html.LabelFor(model => model.RequestForOther, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-7 ">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.RequestForOther)
                                            @Html.ValidationMessageFor(model => model.RequestForOther, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="EmployeeDiv">
                                <div class="row col-md-12">
                                    @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-7">
                                        @Html.DropDownListFor(model => model.EmployeeId, new SelectList(employees, "Id", "Name"), "--Select Employee--", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <br />
                            <br />
                            <div class="form-group">
                                <div class="col-md-offset-4 col-md-4" style="float: right">
                                    <input type="submit" value="Submit" class="btn btn-block btn-primary" onclick="myFunction()" />
                                </div>
                            </div>
                        </fieldset>
                        @*</form>*@
                    </div>
                </div>
            </div>
        </div>
    </div>


}
<div>
    @if (TempData["msg"] != null)
    {
        <div class="alert alert-info">
            @TempData["msg"]
        </div>
    }
</div>
@*<div id="resultDiv" class="alert alert-info">
</div>*@

<div id="requisitionListDiv">
    @Html.Partial("_MyRequisitionListPartial", Model.RequsitionViewModels)

</div>


@section scripts{
    <script type="text/javascript">

        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                //yearRange: "-2:+0",
                minDate: 0,
                maxDate: "+12M +10D"
            });

        });
        //$("#JouneyEndDate").rules('add', { greaterThan: "#JourneyStartDate" });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#EmployeeDiv").hide();
            $("#resultDiv").hide();
        
        });


        $("#RequestForOther").change(function () {


            if ($("#RequestForOther").is(":checked")) {
                $("#EmployeeDiv").show();
                $("#EmployeeId").addClass(required = true);


            } else {
                $("#EmployeeDiv").hide();
                $("#EmployeeId").addClass(required = false);


            }
        });

    </script>

    <script>


        function AddNewRequisition() {
            $("#resultDiv").hide();
            //$("#rquisitionForm").load();

            $("#EmployeeId option:selected").text("--Select Employee--");

            $("#MyModal").modal();

        }
        var startDate;
        var endDate;
        var startTime;
        var endtTime;
        $("#JouneyEndDate").change(function () {
            debugger;
            startDate = $("#JourneyStartDate").val();
            endDate = $("#JouneyEndDate").val();

            if (startDate > endDate) {
                alert("End Date Should Be Greater Than Start Date");
                //$("#JouneyEndDate").clear();
            }

        });
        $("#JouneyEndTime").change(function () {

            startDate = $("#JourneyStartDate").val();
            endDate = $("#JouneyEndDate").val();
            startTime = $("#JourneyStartTime").val();
            endtTime = $("#JouneyEndTime").val();

            if (startDate === endDate) {
                if (startTime > endtTime)
                    alert("End Time Should Be Greater Than Start Time");
                // event.preventDefault();
                //return false;
            }

            //return true;

        });

        function myFunction() {
            debugger;
            var formIsValid = true;
            if (startDate > endDate) {
                alert("End Date Should Be Greater Than Start Date");
                //$("#JouneyEndDate").val = '';
                formIsValid = false;


            }
            if (startDate === endDate) {
                if (startTime > endtTime) {
                    alert("End Time Should Be Greater Than Start Time");
                    formIsValid = false;
                }
            }

            if (formIsValid == false) {
                event.preventDefault();
            }

        }
        function RequestSuccess() {
            //debugger;
            $("#MyModal").modal("hide");
            @*var msg = '@TempData["msg"]';*@
            //$('#resultDiv').show();
            //$('#resultDiv').html(msg);
            //this.reset();

            $('#myTable').DataTable();
        }
    </script>

}