@using Microsoft.Ajax.Utilities
@model System.Collections.Generic.IEnumerable<VehicleManagementApp.ViewModels.MyRequsitionListViewModel>
@{
    int sl = 1;
}
<table class="table table-bordered table-striped" id="myTable">
    <thead>
    <tr>
        <td>
            @Html.Raw("SL")
        </td>
        <th>
            @Html.DisplayNameFor(model => model.RequestType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EmployeeName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RequestedBy)
        </th>
        <th>
            @Html.DisplayName("From")
        </th>
        <th>
            @Html.DisplayNameFor(model => model.To)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.JourneyStart)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.JouneyEnd)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @(sl++)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Form)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.To)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            @{
               
                var startdate = item.JourneyStart.ToString("dd - MMM - yyyy hh:mm tt");
                var enddate = item.JouneyEnd.ToString("dd - MMM - yyyy hh:mm tt");
            }
            <td>
               @Html.Raw(startdate)
            </td>
            <td>
               @Html.Raw(enddate)
            </td>

            <td style="color: green; font-weight: bold">
                @if (item.Status != null)
                {
                    @Html.DisplayFor(modelItem => item.Status)
                }
                else
                {
                    @Html.Raw("Pending")
                }
            </td>
            @*<td>
                @if (item.Status == "Hold")
                {
                    @Html.ActionLink("Details", "Details_V2", new {id = item.Id}, new {@class = "btn btn-info btn-sm"})
                }
                else if (item.Status == "Assign")
                {
                    @Html.ActionLink("Assign Info", "AssignDetails", new {id = item.Id}, new {@class = "btn btn-info btn-sm"})
                }
                else if (item.Status == "Complete")
                {
                    @Html.ActionLink("Details", "Details", new {id = item.Id}, new {@class = "btn btn-info btn-sm"})
                }
                else if (item.Status == null)
                {
                    @Html.ActionLink("Details", "Details_V2", new {id = item.Id}, new {@class = "btn btn-info btn-sm"})
                    @Html.ActionLink("Edit", "Edit", new {id = item.Id}, new {@class = "btn btn-primary btn-sm"})
                    @Html.ActionLink("Cancel", "Delete", new {id = item.Id,}, new {@class = "btn btn-danger btn-sm", onclick = "return confirm('Are You Sure? You Want To Cancel!')"})

                }
            </td>*@
            <td class="dropdown">
                <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    button
                </button>
                <div class="dropdown-menu" id="dropdownMenu2">
                    @if (item.Status == "Hold")
                {
                        @Html.ActionLink("Comment", "Details_V2", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                    }
                    else if (item.Status == "Assign")
                    {
                        @Html.ActionLink("Comment", "Details_V2", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                        @Html.ActionLink("Assign Info", "AssignDetails", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                    }
                    else if (item.Status == "Complete")
                    {
                        @Html.ActionLink("Details", "Details_V2", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                    }
                    else if (item.Status == null)
                    {
                        @Html.ActionLink("Details", "Details_V2", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                        <span style="width: 20px"></span>
                         @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary btn-sm" })
                        <span style="width: 20px"></span>
                         @Html.ActionLink("Cancel", "Delete", new { id = item.Id, }, new { @class = "btn btn-danger btn-sm", onclick = "return confirm('Are You Sure? You Want To Cancel!')" })

                    }

                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
