@using System.Data.Entity.Core.Common.CommandTrees.ExpressionBuilder
@model VehicleManagementApp.ViewModels.RequsitionViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Submit Reqiusition</h2>
<hr/>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div>
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#self" data-toggle="tab">Self</a></li>
                    <li><a href="#others" data-toggle="tab">Other</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div class="tab-pane active" id="self">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                @if (TempData["msg"] != null)
                                {
                                    <div class="alert alert-info">
                                        @TempData["msg"]
                                    </div>
                                }

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.EmployeeId, new SelectList(Model.Employees, "Id", "Name"), "Employe Name", new { @class = "form-control " })
                                        @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Form, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Form, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Form, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.Description, 5, 130, new { htmlAttributes = new { @class = "form-control", @rows = 5 } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.JourneyStart, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.JourneyStart, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                                        @Html.ValidationMessageFor(model => model.JourneyStart, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.JouneyEnd, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.JouneyEnd, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                                        @Html.ValidationMessageFor(model => model.JouneyEnd, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Send" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="tab-pane" id="others">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                @if (TempData["msg"] != null)
                                {
                                    <div class="alert alert-info">
                                        @TempData["msg"]
                                    </div>
                                }

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.EmployeeId, new SelectList(Model.Employees, "Id", "Name"), "Employe Name", 
                                               new
                                               {
                                                   @class = "form-control",
                                                   @value = @Model.Employees,
                                                   onchange = "this.form.submit();"
                                           })
                                        @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Form, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Form, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Form, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model.Description, 5, 130, new { htmlAttributes = new { @class = "form-control", @rows = 5 } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.JourneyStart, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.JourneyStart, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                                        @Html.ValidationMessageFor(model => model.JourneyStart, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.JouneyEnd, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.JouneyEnd, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                                        @Html.ValidationMessageFor(model => model.JouneyEnd, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                    @Html.LabelFor(model => model.RequsitionStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.RequsitionStatusId, new SelectList(Model.Employees,"Id", "StatusName"),"", new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.RequsitionStatusId, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Send" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
             </div>
        </div>
    </div>
</div>



<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts{
    <script src="~/scripts/bootstrap.min.js"></script>
    <script>
        $(function() {
            $(".datetimepicker").datetimepicker();
        });

        //dropdown search
        $(document).ready(function() {
            $(".selectpicker").selectpicker({
                liveSearch: true,
                showSubtext: true
            });
        });
    </script>
}
